<!DOCTYPE html>
<html lang="en">
<head>
  <% include partials/head %>
  <link rel="stylesheet" href="/css/statue.css">
</head>
<body>
  <%- include('partials/header') %>
  <main>
    <div class="jumbotron text-center col-sm-8 mx-auto mb-4">
      <h1>Statue List</h1>
      <form action="/statues/search" method="GET" class="col-sm-12">
        <div class="input-group mt-3 mb-3">
          <select name="searchCategory" class="col-sm-3 custom-select">
            <option value="name" <%= searchCategory && searchCategory === 'name' ? 'selected' : '' %>>Name</option>
            <option value="description" <%= searchCategory && searchCategory === 'description' ? 'selected' : '' %>>Description</option>
          </select>
          <input type="text" name="q" value="<%= query ? query : '' %>" class="form-control" placeholder="Search" aria-label="Search" aria-describedby="search-statue" />
          <div class="input-group-append">
            <input type="submit" value="Search" class="btn btn-outline-secondary" />
          </div>
        </div>
      </form>
      <div id="filterSort" class="col-sm-12 text-right">
        <% if (isAdminUser) { %>
          <div class="filter-container">
            <label for="filter">Filter by </label>
            <div id="filter" class="ml-2 d-inline">
              <div class="filter-flag-container btn-group ml-2" role="group" aria-label="filter by flag">
                <button type="button" class="btn btn-outline-secondary" data-filter="flagged">Flagged</button>
                <button type="button" class="btn btn-outline-secondary" data-filter="unflagged">Unflagged</button>
              </div>
              <div class="filter-visibility-container btn-group ml-2" role="group" aria-label="filter by visibility">
                <button type="button" class="btn btn-outline-secondary" data-filter="private">Private</button>
                <button type="button" class="btn btn-outline-secondary" data-filter="public">Public</button>
              </div>
            </div>
          </div>
        <% } %>
        <div class="sorting-container mt-2">
          <label for="sort">sort by </label>
          <div id="sort" class="btn-group ml-2" role="group" aria-label="Basic example">
            <button type="button" class="btn btn-outline-secondary" data-sort="likes">Like</button>
            <button type="button" class="btn btn-outline-secondary" data-sort="dislikes">Dislike</button>
          </div>
        </div>
      </div>
    </div>
    <div class="container main-container">
      <div class="row multiple-cards-container card-forms-container">
        <%- include('partials/statueCardContainer', {
          statues: statues,
          isAdminUser: isAdminUser,
          maps: maps
        }) %>
      </div>
    </div>
    <div class="col-md-6 col-lg-4 sizer"></div>
  </main>
  <% include partials/footer %>
</body>

<script src="/js/shared/statueForms.js"></script>

<script type="text/javascript">
  $(document).ready(() => {

    $('.main-container').on('submit', '.statue-remove-form', (ev) => {
      ev.preventDefault();
      let errMsg = 'Are you sure that you want to delete statue?: \n\n' + ev.target.dataset['statueName'];
      if (confirm(errMsg)) {
        $(this).unbind('submit').submit();
      }
    });

    const Shuffle = window.Shuffle;
    const element = $('.multiple-cards-container');
    let shuffleInstance = new Shuffle(element, {
      itemSelector: '.card-container',
      sizer: '.sizer',
      filterMode: Shuffle.FilterMode.All,
    });

    $('#filterSort').click((e) => {
      $('#noStatue').remove();
      $(window).off('scroll');
      const $clickedButton = $(e.target);
      const filterBy = $clickedButton.data('filter');
      const sortBy = $clickedButton.data('sort');
      const isActive = $clickedButton.hasClass('active');

      const $resetButton = $clickedButton.siblings();
      const resetFilter = $resetButton.data('filter');
      const resetSort = $resetButton.data('sort');
      const isResetButtonActive = $resetButton.hasClass('active');
      if (isResetButtonActive) {
        $resetButton.removeClass('active');
        if (resetFilter) {
          shuffleInstance.filter();
        } else {
          shuffleInstance.sort();
        }
      }

      if (filterBy) {
        const $buttonContainer = $clickedButton.parent();
        const isFlagFilter = $buttonContainer.hasClass('filter-flag-container');
        let savedFilter = '';
        if (isFlagFilter) {
          savedFilter = $('.filter-visibility-container').find('.active').data('filter');
        } else {
          savedFilter = $('.filter-flag-container').find('.active').data('filter');
        }
        if (isActive) {
          $clickedButton.removeClass('active');
          shuffleInstance.filter(savedFilter);
        } else {
          $clickedButton.addClass('active');
          savedFilter ? shuffleInstance.filter([savedFilter, filterBy]) : shuffleInstance.filter([filterBy]);
        }
      } else if (sortBy) {
        let options = {};
        if (isActive) {
          $clickedButton.removeClass('active');
        } else {
          $clickedButton.addClass('active');
          options = {
            by: sortBy
          };
        }
        shuffleInstance.sort({
          compare:  (a, b) => {
            const sortA = parseInt(a.element.getAttribute(`data-${sortBy}-count`));
            const sortB = parseInt(b.element.getAttribute(`data-${sortBy}-count`));
            return sortB - sortA;
          },
        });
      }

      // bind the scroll event again if the filter/sort options are all unchecked.
      if ($('.active').length === 0) {
        $(window).bind('scroll', bindScroll);
      }
    });

    const $mainContainer = $('.main-container');
    const $cardContainer = $('.multiple-cards-container');
    function bindScroll() {
      if ($(window).scrollTop() + $(window).height() > $(document).height() - 100) {
        if ($('#spinnerContainer').length === 0 && $('#noStatue').length === 0)  {
          $mainContainer.append('<div id="spinnerContainer"><div id="spinner"></div></div>');
          setTimeout(() => {
            $.ajax({
              url: '/?isScroll=1',
              success: (data) => {
                $mainContainer.find('#spinnerContainer').remove();
                const noStatueFound = $(data).is('h3');
                if (noStatueFound) {
                  $('main').append(data);
                } else {
                  $cardContainer.append(data);
                  shuffleInstance = new Shuffle(element, {
                    itemSelector: '.card-container',
                    sizer: '.sizer',
                    filterMode: Shuffle.FilterMode.All,
                  });
                }
              },
            });
          }, 600);
        }
      }
    };
    $(window).bind('scroll', bindScroll);
    bindScroll();
    
  });
</script>
</html>
